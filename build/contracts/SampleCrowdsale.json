{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1474:656:0:-;;;384:5:4;358:31;;;;;;;;;;;;;;;;;;;;1562:566:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;1562:566:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1929:5;1873:12;1887;1844:4;1796:5;1803:7;1812:6;2020:1:3;2012:5;:9;2004:18;;;;;;;;2055:1;2036:21;;:7;:21;;;;2028:30;;;;;;;;2090:1;2072:20;;:6;:20;;;;2064:29;;;;;;;;2107:5;2100:4;:12;;;;2127:7;2118:6;;:16;;;;;;;;;;;;;;;;;;2148:6;2140:5;;:14;;;;;;;;;;;;;;;;;;1933:226;;;472:1:7;465:4;:8;457:17;;;;;;;;486:4;480:3;:10;;;;418:77;886:15:8;870:12;:31;;862:40;;;;;;;;932:12;916;:28;;908:37;;;;;;;;966:12;952:11;:26;;;;998:12;984:11;:26;;;;735:280;;575:10:10;567:5;;:18;;;;;;;;;;;;;;;;;;717:1:5;709:5;:9;701:18;;;;;;;;751:6;;;;;;;;;;;734:24;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;734:24:5;725:6;;:33;;;;;;;;;;;;;;;;;;771:5;764:4;:12;;;;661:120;2116:4:0;2107:5;:13;;2099:22;;;;;;;;1562:566;;;;;;;1474:656;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1474:656:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2389:21:3;2399:10;2389:9;:21::i;:::-;1474:656:0;1169:153:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1169:153:8;;;;;;;;;;;;;;;;;;;;;;;;;;;1302:19:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1302:19:3;;;;;;;;;;;;;;;;;;;;;;;252:18:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:18:7;;;;;;;;;;;;;;;;;;;;;;;452:19:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;452:19:5;;;;;;;;;;;;;;;;;;;;;;;1352:24:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1352:24:3;;;;;;;;;;;;;;;;;;;;;;;292:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;292:26:8;;;;;;;;;;;;;;;;;;;;;;;560:163:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;560:163:4;;;;;;603:83:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;603:83:7;;;;;;;;;;;;;;;;;;;;;;;;;;;1000:21:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1000:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:111:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1001:111:10;;;;;;1106:85:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:31:4;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;869:124:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;869:124:5;;;;;;262:26:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;262:26:8;;;;;;;;;;;;;;;;;;;;;;;2551:577:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;1274:103:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1274:103:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:18:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;938:18:3;;;;;;;;;;;;;;;;;;;;;;;;;;;2551:577;2614:17;2745:14;2634:9;2614:29;;2649:45;2670:12;2684:9;2649:20;:45::i;:::-;2762:26;2778:9;2762:15;:26::i;:::-;2745:43;;2827:24;2841:9;2827;;:13;;:24;;;;:::i;:::-;2815:9;:36;;;;2858:38;2875:12;2889:6;2858:16;:38::i;:::-;2946:12;2907:88;;2928:10;2907:88;;;2966:9;2983:6;2907:88;;;;;;;;;;;;;;;;;;;;;;;;3002:47;3025:12;3039:9;3002:22;:47::i;:::-;3056:15;:13;:15::i;:::-;3077:46;3099:12;3113:9;3077:21;:46::i;:::-;2551:577;;;:::o;1169:153:8:-;1211:4;1306:11;;1288:15;:29;1281:36;;1169:153;:::o;1302:19:3:-;;;;:::o;252:18:7:-;;;;:::o;452:19:5:-;;;;:::o;1352:24:3:-;;;;:::o;292:26:8:-;;;;:::o;560:163:4:-;719:5:10;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;612:11:4;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;682:11;;;;;;;;;;714:4;700:11;;:18;;;;;;;;;;;;;;;;;;560:163::o;603:83:7:-;646:4;678:3;;665:9;;:16;;658:23;;603:83;:::o;1000:21:3:-;;;;;;;;;;;;;:::o;1001:111:10:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1077:5;;;;;;;;;;;1058:25;;;;;;;;;;;;1105:1;1089:5;;:18;;;;;;;;;;;;;;;;;;1001:111::o;1106:85:5:-;1150:4;1182;;1169:9;;:17;;1162:24;;1106:85;:::o;358:31:4:-;;;;;;;;;;;;;:::o;238:20:10:-;;;;;;;;;;;;;:::o;869:124:5:-;913:11;;;;;;;;;;;905:20;;;;;;;;940:13;:11;:13::i;:::-;939:14;931:23;;;;;;;;961:6;;;;;;;;;;;:15;;;977:10;961:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;961:27:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;961:27:5;;;;869:124::o;262:26:8:-;;;;:::o;1274:103:10:-;719:5;;;;;;;;;;;705:19;;:10;:19;;;697:28;;;;;;;;1343:29;1362:9;1343:18;:29::i;:::-;1274:103;:::o;938:18:3:-;;;;;;;;;;;;;:::o;1504:180:8:-;499:11;;480:15;:30;;:64;;;;;533:11;;514:15;:30;;480:64;472:73;;;;;;;;1627:52;1654:12;1668:10;1627:26;:52::i;:::-;1504:180;;:::o;5569:121:3:-;5641:7;5665:20;5680:4;;5665:10;:14;;:20;;;;:::i;:::-;5658:27;;5569:121;;;:::o;1214:123:9:-;1272:9;1297:1;1293;:5;1289:9;;1316:1;1311;:6;;1304:14;;;;;;1331:1;1324:8;;1214:123;;;;:::o;4797:150:3:-;4900:42;4915:12;4929;4900:14;:42::i;:::-;4797:150;;:::o;5200:131::-;;;:::o;1563:88:5:-;1603:6;;;;;;;;;;;:14;;;1624:9;1635:10;1603:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1603:43:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1603:43:5;;;;;1563:88::o;4005:130:3:-;;;:::o;1278:197:5:-;1321:13;:11;:13::i;:::-;1317:127;;;1344:6;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1344:14:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1344:14:5;;;;1366:6;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1366:28:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1366:28:5;;;;1317:127;;;1415:6;;;;;;;;;;;:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1415:22:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1415:22:5;;;;1317:127;1450:20;:18;:20::i;:::-;1278:197::o;1512:171:10:-;1603:1;1582:23;;:9;:23;;;;1574:32;;;;;;;;1645:9;1617:38;;1638:5;;;;;;;;;;;1617:38;;;;;;;;;;;;1669:9;1661:5;;:17;;;;;;;;;;;;;;;;;;1512:171;:::o;872:209:7:-;977:52;1004:12;1018:10;977:26;:52::i;:::-;1072:3;;1043:25;1057:10;1043:9;;:13;;:25;;;;:::i;:::-;:32;;1035:41;;;;;;;;872:209;;:::o;203:373:9:-;261:9;492:1;487;:6;483:35;;;510:1;503:8;;;;483:35;532:1;528;:5;524:9;;555:1;550;546;:5;;;;;;;;:10;539:18;;;;;;570:1;563:8;;203:373;;;;;:::o;503:168:6:-;626:5;;;;;;;;;;;612:25;;;638:12;652;612:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;612:53:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;612:53:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;612:53:6;;;;;;;;;;;;;;;;604:62;;;;;;;;503:168;;:::o;919:38:4:-;:::o;3552:175:3:-;3689:1;3665:26;;:12;:26;;;;3657:35;;;;;;;;3720:1;3706:10;:15;;3698:24;;;;;;;;3552:175;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\n\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is MintableToken {\n\n    string public constant name = \"Sample Crowdsale Token\";\n    string public constant symbol = \"SCT\";\n    uint8 public constant decimals = 18;\n\n}\n\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\n// XXX There doesn't seem to be a way to split this line that keeps solium\n// happy. See:\n// https://github.com/duaraghav8/Solium/issues/205\n// --elopio - 2018-05-10\n// solium-disable-next-line max-len\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\n    constructor(\n        uint256 _openingTime,\n        uint256 _closingTime,\n        uint256 _rate,\n        address _wallet,\n        uint256 _cap,\n        MintableToken _token,\n        uint256 _goal\n    )\n        public\n        Crowdsale(_rate, _wallet, _token)\n        CappedCrowdsale(_cap)\n        TimedCrowdsale(_openingTime, _closingTime)\n        RefundableCrowdsale(_goal)\n    {\n        //As goal needs to be met for a successful crowdsale\n        //the value needs to less or equal than a cap which is limit for accepted funds\n        require(_goal <= _cap);\n    }\n}",
  "sourcePath": "/Volumes/Data/twogap/dashboard/contracts/contracts/SampleCrowdsaleToken.sol",
  "ast": {
    "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/contracts/SampleCrowdsaleToken.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        63
      ],
      "SampleCrowdsaleToken": [
        17
      ]
    },
    "id": 64,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 619,
        "src": "26:98:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 532,
        "src": "125:104:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 557,
        "src": "230:96:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 1439,
        "src": "327:87:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "592:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1438",
                "typeString": "contract MintableToken"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "592:13:0"
          }
        ],
        "contractDependencies": [
          885,
          1257,
          1300,
          1332,
          1438,
          1739
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          1438,
          885,
          1739,
          1257,
          1300,
          1332
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 10,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "613:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "613:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "643:24:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 13,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "673:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "673:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "705:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 16,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "716:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "716:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "749:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 64,
        "src": "559:196:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 618,
              "src": "1502:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$618",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "1502:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 531,
              "src": "1519:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$531",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "1540:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$556",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "1540:15:0"
          }
        ],
        "contractDependencies": [
          369,
          417,
          531,
          556,
          618,
          705,
          885
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 63,
        "linearizedBaseContracts": [
          63,
          556,
          531,
          417,
          885,
          705,
          618,
          369
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1940:188:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2107:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2116:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1757,
                        1758
                      ],
                      "referencedDeclaration": 1757,
                      "src": "2099:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 40,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "1796:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 41,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "1803:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 42,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1812:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1438",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 43,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 369,
                  "src": "1786:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$369_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1786:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "1844:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 46,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 618,
                  "src": "1828:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$618_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "1873:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "1887:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 50,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 705,
                  "src": "1858:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$705_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1858:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "1929:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 531,
                  "src": "1909:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$531_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1909:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1583:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1613:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1643:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1666:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1691:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1713:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1438",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 34,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1438,
                    "src": "1713:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1438",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1743:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:189:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:0:0"
            },
            "scope": 63,
            "src": "1562:566:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 64,
        "src": "1474:656:0"
      }
    ],
    "src": "0:2130:0"
  },
  "legacyAST": {
    "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/contracts/SampleCrowdsaleToken.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        63
      ],
      "SampleCrowdsaleToken": [
        17
      ]
    },
    "id": 64,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 619,
        "src": "26:98:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 532,
        "src": "125:104:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 557,
        "src": "230:96:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Data/twogap/dashboard/contracts/node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 64,
        "sourceUnit": 1439,
        "src": "327:87:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1438,
              "src": "592:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1438",
                "typeString": "contract MintableToken"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "592:13:0"
          }
        ],
        "contractDependencies": [
          885,
          1257,
          1300,
          1332,
          1438,
          1739
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17,
          1438,
          885,
          1739,
          1257,
          1300,
          1332
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 10,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "613:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 8,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "613:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53616d706c652043726f776473616c6520546f6b656e",
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "643:24:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_57a85b1937a20a5d495de875a4a7af46ff581ccf3f336ab6c1a136ea0b8088ca",
                "typeString": "literal_string \"Sample Crowdsale Token\""
              },
              "value": "Sample Crowdsale Token"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 13,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "673:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 11,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "673:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534354",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "705:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_b2b1dc3929a2664c613672dce30cd0d6fe6b6e782ad9ee21092964c70aaaffa9",
                "typeString": "literal_string \"SCT\""
              },
              "value": "SCT"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 16,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "716:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 14,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "716:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "749:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          }
        ],
        "scope": 64,
        "src": "559:196:0"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 18,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 618,
              "src": "1502:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$618",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 19,
            "nodeType": "InheritanceSpecifier",
            "src": "1502:15:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 531,
              "src": "1519:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$531",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 21,
            "nodeType": "InheritanceSpecifier",
            "src": "1519:19:0"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 22,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 556,
              "src": "1540:15:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$556",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 23,
            "nodeType": "InheritanceSpecifier",
            "src": "1540:15:0"
          }
        ],
        "contractDependencies": [
          369,
          417,
          531,
          556,
          618,
          705,
          885
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 63,
        "linearizedBaseContracts": [
          63,
          556,
          531,
          417,
          885,
          705,
          618,
          369
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "1940:188:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2107:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 57,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33,
                          "src": "2116:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2107:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 55,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1757,
                        1758
                      ],
                      "referencedDeclaration": 1757,
                      "src": "2099:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2099:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "2099:22:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 40,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29,
                    "src": "1796:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 41,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31,
                    "src": "1803:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 42,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 35,
                    "src": "1812:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1438",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 43,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 39,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 369,
                  "src": "1786:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$369_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1786:33:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 45,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 33,
                    "src": "1844:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 46,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 44,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 618,
                  "src": "1828:15:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$618_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1828:21:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 48,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 25,
                    "src": "1873:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 49,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 27,
                    "src": "1887:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 50,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 47,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 705,
                  "src": "1858:14:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$705_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1858:42:0"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 52,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37,
                    "src": "1929:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 53,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 51,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 531,
                  "src": "1909:19:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$531_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1909:26:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1583:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1583:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1613:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 29,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1643:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1643:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1666:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 30,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 33,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1691:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 35,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1713:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1438",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 34,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1438,
                    "src": "1713:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1438",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 62,
                  "src": "1743:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1743:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:189:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1940:0:0"
            },
            "scope": 63,
            "src": "1562:566:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 64,
        "src": "1474:656:0"
      }
    ],
    "src": "0:2130:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-08-20T08:50:55.349Z"
}